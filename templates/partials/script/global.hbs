{{!< default}}
{{!-- 
/**
 * Uncertainty Project
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script include for global logic
 * ==========
 */
--}}

 <script type="text/javascript">
//     window.smartlook||(function(d) {
//     var o=smartlook=function(){ o.api.push(arguments)},h=d.getElementsByTagName('head')[0];
//     var c=d.createElement('script');o.api=new Array();c.async=true;c.type='text/javascript';
//     c.charset='utf-8';c.src='https://rec.smartlook.com/recorder.js';h.appendChild(c);
//     })(document);
//     smartlook('init', '5814a763f5c42be6436c4f1a369357cb6392d32e');
// </script>

<script type="text/javascript">

var socket, 
	socketEvents,
	gameCode,
	playing = false,
	sfxPath = '/sfx/';

$(document).ready(function() {

	var windowsize = $(window).width(),
		bodysize = $('#wrapper').width(),
		wrapperLeft = $('#wrapper').offset().left,
		extraWindow = (windowsize - bodysize)/2;

	var imageLoaded = function(parentElem, callback) {

	  parentElem.find('img').first().on('load', function() {

	    // Image loaded, callback fires
	    callback();

	  })
	  .each(function() {

	    // Force image to dispatch 'load' (cache workaround)
	    if(this.complete) $(this).load();

	  });

	};

	var getScript = function() {

	    $.getScript( '/js/game.js' )
        .done(function( script, textStatus ) {
        	console.log('success');
        })
        .fail(function( jqxhr, settings, exception ) {
            console.error('Unable to load (error: "%s")',  exception);
        });

	}

	setTimeout(function () {

	    $('.login #login').fadeIn();

	}, 1000);


	var finishResize = function() {

		// Show wrapper now that resize is complete
		$('#wrapper').css('visibility', 'visible');

	}
	
	var setAbsolutes = function(absolutes) {

		if (absolutes.length == 0) {
			// Call finish function after xxx milaseconds
			var finish = _.debounce(finishResize, 500);
			finish();
			return;
		}

		var length = absolutes.length;

		_.each(absolutes, function(item, ind) {

			var position = {};

			// Check current positions
			if ($(item).css('left') !== undefined && $(item).css('left') !== null && $(item).css('left') !== 'auto' && $(item).css('left')) {
				position.left = $(item).css('left');
			}

			if ($(item).css('right') !== undefined &&$(item).css('right') !== null && $(item).css('right') !== 'auto' && $(item).css('right')) {
				position.right = $(item).css('right');
			}

			// If left, set it. 
			if (position.left){
				$(item).css('left', wrapperLeft);
			}
			//If right, set it.
			if (position.right) {
				position.right =+ extraWindow;
				$(item).css('right', position.right);
			}

			if (ind == length - 1) {
				// Call finish function after xxx milaseconds
				var finish = _.debounce(finishResize, 500);
				finish();

			}

		});

	};

	// Locally-scoped methods
	var findAbsolutes = function() {

		windowsize = $(window).width(),
		bodysize = $('#wrapper').width(),
		wrapperLeft = $('#wrapper').offset().left,
		extraWindow = (windowsize - bodysize)/2, 

		slideheight = ($(window).height()/4)*2.5;

		$('.item:not(.open)').height(slideheight);

		// Get all absolutely-positioned elements
		var outerAbsolutes = 
		$('#wrapper :not(.tinderslide *, .buttons, .nav-bar, .alert *, .glide *)')
		.filter(function(){
		  return ($(this).css('position') == 'absolute');
		});

		setAbsolutes(outerAbsolutes);

	};

	findAbsolutes();

	$(window).on('resize', function () {

		// Hide content wrapper during resize
		$('#wrapper').css('visibility' ,'hidden');

		// Adjust absolutely-position elements for desktop only
		findAbsolutes();

	});

	$('#password_input').keydown(function(evt) {
            
        if(evt.keyCode == 13)
            $('#btn_login').click();

    });

    $('#email_input').keydown(function(evt) {
            
        if(evt.keyCode == 13)
            $('#btn_login').click();

    });

	$('#btn_login').click(function(evt) {
		var data = {};
		$('.error').hide().html('');
		data.email = $('#email_input').val();
		data.password = $('#password_input').val();

		if (!data.password || !data.email) {
			if (!data.password && !data.email)
				var msg = 'You must fill out your password and email.';
			else if (!data.password)
				var msg = 'You must fill out your password.';
			else
				var msg = 'You must fill out your email.'

			$('.error').html(msg).fadeIn();
			  
		} else {
			console.log("checking login info");

			$.get("/api/find/", data, function(data){

				if(data.error_code) {
                    $('.error').html(data.msg).fadeIn();
                } else 
					window.location = data;
			})
			.fail(function() {
			    alert( "error" );
			});
		}

	});


	$('#rules-glide').glide({
	    type: "slider",
	    autoplay: false,
	    autoheight: false, 
	    default: 1
	});

	// NAVIGATION

	$('[data-section]').on('click', function(){

	    var animOpts = {};

	    var section = $(this).data('section');
	    var direction = $(this).data('direction');

	    $('.section.ACTIVE').css({'left': 'auto', 'right': 'auto'});

	    animOpts[direction] = '-=4000px'; 
	    
	    $('.section.ACTIVE').animate( animOpts , 500, function(){

		    $(this).toggleClass('ACTIVE');

		    $('.section.' + section).css({'left': '0px', 'right':'0px'});
		      setAbsolutes($('.section.' + section));

		    $('.section.' + section).fadeIn(function(){
		        console.log(section);
		        $(this).toggleClass('ACTIVE');
		    });
	    });

	});

	$('[data-subsection]').on('click', function(){

	    var section = $(this).data('subsection');
	    $('[data-subsection].active').toggleClass('active');
	    $(this).toggleClass('active');
	    
	    $('.subsection.ACTIVE').hide(function(){

	        $('.subsection.' + section).fadeIn(function(){

		        console.log(section);

		        $('.subsection.ACTIVE').toggleClass('ACTIVE');
		        $(this).toggleClass('ACTIVE');

	        });
	    });

	});

	$('input#back-btn').click(function() {
	    console.log("returngin")
	    $('.modal-wrap.match.open').fadeOut().removeClass('open');
	    $('.modal-group').hide();
	});

	// PROFILE 
  $('#btn-save-profile').on('click', function() {

    if ($('.edit .team-select:selected').length > 0 || $('.edit #username').value ) {
      console.log('changing username/team')
      var data = {
        player: '{{playerId}}', 
        team: $('.edit .team-select:selected').attr('id'),
        username: $('.edit #username').val(), 
        file: selectedFile
      };

      $.post("/api/update/{{playerId}}", data, function(data){
        // Notify success
        $('.save-msg').text('Nice! Saved.').fadeIn();
      })
      .done(function() {
        alert ('success')
      })
      .error(function(err) {
          alert( "error" + err );
      });

    }
  });

  $('#upload_widget_opener').cloudinary_upload_widget(
    { cloud_name: 'esalling', 
      upload_preset: 'wtokgjnv', 
      cropping: 'server', 
      sources: [ 'local', 'url' ], 
      multiple: false, 
      tags: '{{playerId}}'
    }, function(error, result) { 
      console.log(result[0]);

      // Do some stuff with the display
    $.post("/api/update/image_upload/{{playerId}}", { image: result[0] }, function(data){
      
      // Notify success
      $('.save-msg').text('Nice! Saved.').fadeIn();

      // Do some stuff with the display

    })
    .done(function() {
      alert ('success')
    })
    .error(function(err) {
        alert( "error" + err );
    });

});

// Levels

$('[data-level]').on('click', function(e) {

    console.log($(this).data('level'));

    if (playing == false)
      StartLevel($(this).data('level'));

    e.stopPropagation();
    e.bubbles = false;
    e.preventDefault();

  });

  function StartLevel(num) {

    // enable/disable buttons
    if (num == 2) {
      $('#compost').attr('disabled', false);
    } else if (num == 3) {
      $('#compost').attr('disabled', false);
      $('#special').attr('disabled', false);
    }

    if (num == 1 && ($(".level[data-level=1]").data('tries') == 0 || !$(".level[data-level=1]").data('tries'))) {
      swipeAlertRight = true;
      swipeAlertLeft = true;
      buttonAlertRecycle = true;
      buttonAlertTrash = true;
    }

    if (num == 2 && ($(".level[data-level=2]").data('tries') == 0  || !$(".level[data-level=1]").data('tries'))) {
      buttonAlertSuper = true;
    }

    if (num == 3 && ($(".level[data-level=3]").data('tries') == 0 || !$(".level[data-level=1]").data('tries'))) {
      buttonAlertSpecial = true;
    }

     if ({{player.new}}) {
      $('.alert .msg').html('<h3>Welcome to Recyclr</h3><p>Remember, you can keep track of your matches as you play using the counter at the top of your screen.</p>');
      $('.alert img, .alert #alert-continue').show();
      $('.alert .alert-inner').addClass('new-player');
      $('.alert').fadeIn();
    }

    // Bind close alert button
    $('#alert-abort, #alert-continue').on('click', function(e){
       e.stopPropagation();
      $('.alert').fadeOut(function(){
        $(this).find('button, img').hide();
      });
    });

  	// Fade in the game, out the profile
  	$('.ACTIVE').removeClass('ACTIVE').fadeOut(function(){

      $('.game').addClass('ACTIVE').fadeIn();
      playing = true;

      $('.buttons').show();
      $('.level.header').show();

      var data = {
        level: num, 
        player: '{{playerId}}'
      };

      $.get("/api/game/level", data, function(data){
        // Notify success
        $(".game-level").html(data.html).fadeIn(function(){
            getScript();
          if ($(this).data('grade') >= 70) {
            pointlimit = $('.level.ACTIVE').data('grade');
            console.log(pointlimit);


          }
        });

      });

  	});

  }



});
	
</script>