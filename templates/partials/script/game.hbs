	// GAME LOGIC

	$('.levels [data-level]').click(function(evt) {

		console.log($(this).data('level'));
		StartLevel($(this).data('level'));

	});

	var points = 0;

	$('#tinderslide').jTinder({
		onDislike: function (item) {
	        CheckTrash(item);
	    },
	    onLike: function (item) {
	        CheckRecycle(item);
	    },
	    animationRevertSpeed: 200,
	    animationSpeed: 400,
	    threshold: 1,
	    likeSelector: '#recycle',
	    dislikeSelector: '#trash'
	});

	// If a player chooses to trash an item
  $('#trash').click(function() {
  	$('#tinderslide').jTinder('dislike');
  });

  function CheckTrash(item) {
  	// check if item is trash
  	if (item.hasClass('Trash')) {
  		console.log('CORRECT - dis trash');
  		UpdateScore(1);
  	} else {
  		UpdateScore(-1);
  		console.log ('WRONG - dis recyclable');
  	}
  }

  // If a player chooses to recycle
  $('#recycle').click(function() {
  	$('#tinderslide').jTinder('like');
  });

  function CheckRecycle(item) {
  	// check if item is recyclable
  	if (item.hasClass('Recycle')) {
  		UpdateScore(1);
  		console.log('CORRECT - dis recyclable');

  	} else {
  		UpdateScore(-1);
  		console.log ('WRONG - dis trash');
  	}
  }

  function StartLevel(num) {
  	// Fade in the game, out the profile
  	$('.profile').fadeOut(function(){
  		$('.game').fadeIn();
  		// Fade in the level
  		console.log(num);
  		console.log($('.game').find(".level[data-level=" + num + "]"));
		$('.game').find(".level[data-level=" + num + "]").fadeIn(function(){
			console.log("fading in");
		});
  	});

  }

  function UpdateScore(num) {
  	points = points + num;

  	console.log(points);

  	var data = {};
		data.id = "{{playerId}}";
		data.score = points;
		console.log(data);

  	$.get("/api/update/", data, function(data){
  		console.log("here we goooo :", data)
  		$('#points-counter').html(points);
	})
	.fail(function(err) {
	    alert( "error" + err );
	});

  }

