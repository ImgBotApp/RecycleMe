	// GAME LOGIC
	var levelItems,
      points = 0, 
      swipeAlertRight,
      swipeAlertLeft,
      buttonAlertRecycle,
      buttonAlertTrash,
      buttonAlertSpecial,
      buttonAlertSuper;


  function ShowMatch(item, match) {

    var modalId = $(item).find('.item-pane').attr('id');

    if (match) {
      $('.modal-wrap.match#' + modalId + ' .message').text('It\'s a Match!');

    } else {
      $('.modal-wrap.match#' + modalId + ' .message').text('Not Quite!');
    }
    $('.modal-group').show(function(){
      $('.modal-wrap.match#' + modalId).fadeIn().addClass('open');

    });
    
  }

  function CheckSpecial(item, special) {
    // check if item is recyclable
    if (item.hasClass(special)) {
      // if (item)
      console.log('CORRECT - dis special');
      UpdateScore(1);
      ShowMatch(item, true);
    } else {
      ShowMatch(item, false);
      console.log ('WRONG - dis something ELSe');
    }
  }

  function CheckTrash(item) {
    // check if item is trash
    if ($(item).hasClass('Trash')) {
      ShowMatch(item, true);
      console.log('CORRECT - dis trash');
      UpdateScore(1);
    } else {
      ShowMatch(item, false);
      console.log ('WRONG - dis recyclable');
    }
  }

  function CheckRecycle(item) {
    // check if item is recyclable
    if ($(item).hasClass('Recycle')) {
      UpdateScore(1);
      ShowMatch(item, true);
      console.log('CORRECT - dis recyclable');

    } else {
      ShowMatch(item, false);
      console.log ('WRONG - dis trash');
    }
  }

  function CheckCompost(item) {
    console.log(item);
    // check if item is recyclable
    if (item.hasClass('Compost')) {
      UpdateScore(1);
      ShowMatch(item, true);
      console.log('CORRECT - dis compost');

    } else {
      ShowMatch(item, false);
      console.log ('WRONG - dis something ELSe');
    }
  }

	$('.level-group [data-level]').click(function(evt) {

		console.log($(this).data('level'));
		StartLevel($(this).data('level'));

	});

  $('.item').hammer().on("swipeleft", function(ev){

    if ($(this).hasClass('gone'))
      return;

    var item = $(this);

    if (buttonAlertTrash == true) {
      // Let the player know what they are doing
      $('.alert .msg').text('You are about to trash this item! Are you sure?');
      $('.alert').fadeIn(function(){
          swipeAlertLeft = false;
          // Confirm to continue
          $(this).find('#alert-confirm').on('click', function(){
            // Check Item
            $(item).addClass('gone');
            CheckTrash(item);

            $(item).animate({
              left: '-1000px'
            }, 500);

            $('.alert').fadeOut();
          });
      });
    } else {
      // Check Item
      item.addClass('gone');
      CheckTrash(item);

      item.animate({
        left: '-1000px'
      }, 500);
    }

  });

	// If a player chooses to trash an item
  $('#trash').on('click', function() {
    var item = $('.level.ACTIVE .item:not(.gone)').last();

    if (buttonAlertTrash == true) {
      // Let the player know what they are doing
      $('.alert .msg').text('You are about to trash this item! Are you sure?');
      $('.alert').fadeIn(function(){
        buttonAlertTrash = false;
        // Confirm to continue
        $(this).find('#alert-confirm').on('click', function(){
          // Check Item
          $(item).addClass('gone');
          CheckTrash(item);

          $(item).animate({
            left: '-1000px'
          }, 500);

          $('.alert').fadeOut();
        });
      });
    } else {
      // Check Item
      $(item).addClass('gone');
      CheckTrash(item);
      $(item).animate({
        left: '-1000px'
      }, 500);
    }

    
  });

  $('.item').hammer().on("swiperight", function(ev){
    if ($(this).hasClass('gone'))
      return;

    var item = $(this);

    if (swipeAlertRight == true) {
      // Let the player know what they are doing
      $('.alert .msg').text('You are about to recycle this item! Are you sure?');
      $('.alert').fadeIn(function(){
          swipeAlertRight = false;
          // Confirm to continue
          $(this).find('#alert-confirm').on('click', function(){
            $(item).addClass('gone');
            CheckRecycle(item);

            $(item).animate({
              right: '-1000px'
            }, 500);

            $('.alert').fadeOut();
          });
      });
    } else {
      // Check Item
      $(item).addClass('gone');
      CheckRecycle(item);
      $(item).animate({
        right: '-1000px'
      }, 500);
    }
    
  });

  // If a player chooses to recycle
  $('#recycle').on('click', function() {
    var item = $('.level.ACTIVE .item:not(.gone)').last();

    if (buttonAlertRecycle == true) {
      // Let the player know what they are doing
      $('.alert .msg').text('You are about to recycle this item! Are you sure?');
      $('.alert').fadeIn(function(){
          buttonAlertRecycle = false;
          // Confirm to continue
          $(this).find('#alert-confirm').on('click', function(){
            // Check Item
            $(item).addClass('gone');
            CheckRecycle(item);
            $(item).animate({
              right: '-1000px'
            }, 500);

            $('.alert').fadeOut();

          });
      });
    } else {
      // Check Item
      $(item).addClass('gone');
      CheckRecycle(item);
      $(item).animate({
        right: '-1000px'
      }, 500);
    }

  });

  // If a player chooses to compost
  $('#compost').on('click', function() {
    var item = $('.level.ACTIVE .item:not(.gone)').last();

    if (buttonAlertSuper == true) {
      // Let the player know what they are doing
      $('.alert .msg').text('You are about to compost this item! Are you sure?');
      $('.alert').fadeIn(function(){
          buttonAlertSuper = false;
          // Confirm to continue
          $(this).find('#alert-confirm').on('click', function(){
            // Check item
            $(item).addClass('gone');
            CheckCompost(item);
            $(item).animate({
              top: '-1000px'
            }, 500);

            $('.alert').fadeOut();

          });
      });
    } else {
      // Check Item
      $(item).addClass('gone');
      CheckCompost(item);
      $(item).animate({
        'top': "-1000px"
      }, 500);

    }

  });

  // If a player chooses 'special'
  $('#special').on('click', function() {

    var item = $('.level.ACTIVE .item:not(.gone)').last();
    
    $('.modal.special').fadeIn(function() {
      $('.option').click(function(){

        var option = $(this)

        if (buttonAlertSpecial == true) {
          // Let the player know what they are doing
          $('.alert .msg').text('You are about to <span></span> this item! Are you sure?');
          $('.alert').fadeIn(function(){
            buttonAlertSpecial = false;
            // Confirm to continue
            $(this).find('#alert-confirm').on('click', function(){
              // Check Item
              CheckSpecial(item, option.attr('id'));
              $('.modal.special').fadeOut();
              $(item).addClass('gone');
              $(item).animate({
                'top': "-1000px"
              }, 500);

              $('.alert').fadeOut();
              
            });
          });
        } else {
          // Check Item
          CheckSpecial(item, option.attr('id'));
          $('.modal.special').fadeOut();
          $(item).addClass('gone');
          $(item).animate({
            'top': "-1000px"
          }, 500);
        }

       

      })
    });
    
  });

  $('.item.open').on('click', function(e){
    event.preventDefault();
    event.stopPropagation();
    return;
  });

  $('.item:not(.open)').on('click', function(event){

    event.preventDefault();
    event.stopPropagation();

    $(this).css('z-index', '3000');

    $(this).animate({
      'height':'100%',
      'max-height':'100%',
      'bottom':'0px',
      'top':'-110px'
    }, 200);

    $(this).addClass('open');

    $(this).find('.item-bio').show();

    $(this).find('.btn-close').css('visibility', 'visible');

    $(this).find('.btn-close').on('click', function(event){

      event.preventDefault();
      event.stopPropagation();

      $(this).closest('.item.open').css('z-index', '1000');

      $(this).closest('.item.open').animate({
        'height':'100%',
        'bottom':'0px',
        'max-height': slideheight,
        'top':'0px'
      }, 200, function(){
        $(this).removeClass('open');
        $(this).find('.item-bio').hide();
        $(this).find('.btn-close').css('visibility', 'hidden');
      });

    });

  });
  

  function StartLevel(num) {
   // enable/disable buttons
    if (num == 2) {
      $('#compost').attr('disabled', false);
    } else if (num == 3) {
      $('#compost').attr('disabled', false);
      $('#special').attr('disabled', false);
    }

    if (num == 1 && ($(".level[data-level=1]").data('tries') == 0 || !$(".level[data-level=1]").data('tries'))) {
      swipeAlertRight = true;
      swipeAlertLeft = true;
      buttonAlertRecycle = true;
      buttonAlertTrash = true;
    }

    if (num == 2 && ($(".level[data-level=2]").data('tries') == 0  || !$(".level[data-level=1]").data('tries'))) {
      buttonAlertSuper = true;
    }

    if (num == 3 && ($(".level[data-level=3]").data('tries') == 0 || !$(".level[data-level=1]").data('tries'))) {
      buttonAlertSpecial = true;
    }

    // Bind close alert button
    $('#alert-abort').on('click', function(){
      $('.alert').fadeOut();
    });

    console.log(swipeAlertRight, swipeAlertLeft, buttonAlertSuper, buttonAlertSpecial);

  	// Fade in the game, out the profile
  	$('.level-group').fadeOut(function(){
      $('.buttons').show();
      $('.level.header').show();
  		// Fade in the level
  		$('.game').find(".level[data-level=" + num + "]").fadeIn(function(){
        
  			$('.ACTIVE').removeClass('ACTIVE');
  			$(this).addClass('ACTIVE');

        if ($(this).data('grade') >= 70) {
          pointlimit = $('.level.ACTIVE').data('grade');
          console.log(pointlimit);
        }

  		});
  	});

  }

  function UpdateScore(num) {
  	var end = false;

    if (points >= $('.level.ACTIVE').data('max')){
      points = points + num/2;
    } else 
    	points = points + num;

    // Update player score
    $('#points-counter').html(points);

  	// Check if this is the last card in the stack - end the level
  	if ($('.level.ACTIVE .item:not(.gone)').length == 0){
  		end = true;
  	}

  	if (end == true) {
	  	// Send player data
	  	var data = {};
			data.id = "{{playerId}}";
			data.score = points, 
			data.level = $('.level.ACTIVE').data('level');

	  	$.get("/api/game/", data, function(data){
	  		// Show that end-of-level modal
	  		$('.modal.end').html(data.html).fadeIn();
  		})
  		.fail(function(err) {
  		    alert( "error" + err );
  		});

  	} 

  }

  // PROFILE 
  $('#btn-save-profile').on('click', function() {

    // Profile Image Upload
    var selectedFile = $('#image_upload').get(0).files[0];

    if (selectedFile) {

      var fileName = selectedFile.name;

      //Create the FormData data object and append the file to it.
      var newImage = new FormData();
      newImage.append('image_upload', selectedFile); //This is the raw file that was selected

      var opts = {
        url: 'http://localhost:3000/api/update/image_upload/{{playerId}}',
        data: newImage,
        cache: false,
        contentType: false,
        processData: false,
        type: 'POST',
        success: function(data){
          console.log('Image upload ID: ' + data.image_upload._id);
        }, 
        fail: function(err){
          console.log('error: ' + err);
        }
      };
                    
      //Execute the AJAX operation.
      jQuery.ajax(opts);

    }

    if ($('.edit .team-select:selected').length > 0 || $('.edit #username').value !== undefined) {
      console.log('changing username/team')
      var data = {
        player: '{{playerId}}', 
        team: $('.edit .team-select:selected').attr('id'),
        username: $('.edit #username').val()
      };

      $.get("/api/update/{{playerId}}", data, function(data){
        // Notify success
        $('.save-msg').text('Nice! Saved.').fadeIn();
      })
      .fail(function(err) {
          alert( "error" + err );
      });

    }

  

  });

  function readURL(input) {
    if (input.files && input.files[0]) {
        var reader = new FileReader();
        
        reader.onload = function (e) {
            $('img.profile-picture').attr('src', e.target.result);
        }
        
        reader.readAsDataURL(input.files[0]);

        console.log(input.files[0])
    }
  }
  
  $("input.profile-picture").change(function(){
      readURL(this);
  });

  // NAVIGATION

  $('[data-section]').on('click', function(){

    var section = $(this).data('section');
    
    $('.section.ACTIVE').hide(function(){

      $('.section.' + section).fadeIn(function(){

        console.log(section);

        $('.section.ACTIVE').toggleClass('ACTIVE');
        $(this).toggleClass('ACTIVE');

      });
    });

  });

  $('[data-subsection]').on('click', function(){

    var section = $(this).data('subsection');
    $('[data-subsection].active').toggleClass('active');
    $(this).toggleClass('active');
    
    $('.subsection.ACTIVE').hide(function(){

      $('.subsection.' + section).fadeIn(function(){

        console.log(section);

        $('.subsection.ACTIVE').toggleClass('ACTIVE');
        $(this).toggleClass('ACTIVE');

      });
    });

  });

  $('input#back-btn').click(function() {
    console.log("returngin")
    $('.modal-wrap.match.open').fadeOut().removeClass('open');
    $('.modal-group').hide();
  });

